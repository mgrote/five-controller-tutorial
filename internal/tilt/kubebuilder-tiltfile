load('ext://restart_process', 'docker_build_with_restart')

# adapted from https://github.com/tilt-dev/tilt-extensions/tree/master/kubebuilder

def kubebuilder(IMG='controller:latest', CONTROLLERGEN='crd rbac:roleName=manager-role webhook paths="./..." output:crd:artifacts:config=config/crd/bases;'):

    DIRNAME = os.path.abspath(os. getcwd())
    BINDIR = os.path.join(DIRNAME, 'bin')
    print("curent directory ", DIRNAME)

    def controllergen():
        return BINDIR + '/controller-gen '

    def kustomize():
        return BINDIR + '/kustomize '

    def yaml():
        return local('cd config/manager; ' + kustomize() +  'edit set image controller=' + IMG + '; cd ../..; ' + kustomize() + 'build config/default')

    def manifests():
        return controllergen() + CONTROLLERGEN

    def generate():
        return controllergen() + 'object:headerFile="hack/boilerplate.go.txt" paths="./...";'

    def vetfmt():
        return 'go vet ./...; go fmt ./...'

    # build to tilt_bin beause kubebuilder has a dockerignore for bin/
    def binary():
        return 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -gcflags "-N -l" -a -o tilt_bin/manager main.go'
        # return 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags \'-extldflags "-static"\' -o tilt_bin/manager main.go'
        # return 'CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -o tilt_bin/manager main.go'

    local(manifests() + generate())

    local_resource('CRD', manifests() + ' ' + kustomize() + 'build config/crd | kubectl apply -f -', deps=["api"])

    k8s_yaml(yaml())

    deps = ['controllers', 'main.go']
    deps.append('api')

    local_resource('Watch&Compile', generate() + binary(), deps=deps, ignore=['*/*/zz_generated.deepcopy.go'])

    # local_resource('Sample YAML', 'kubectl apply -f ./config/samples', deps=["./config/samples"], resource_deps=[DIRNAME + "-controller-manager"])

    # DOCKERFILE = '''FROM  gcr.io/distroless/static:nonroot  --> is not working, tilt needs a full featured linux image
    DOCKERFILE = '''FROM ubuntu:jammy
    WORKDIR /
    COPY ./tilt_bin/manager /manager
    USER 65532:65532
    CMD ["/manager"]
    '''

    docker_build_with_restart(IMG, '.',
        dockerfile_contents=DOCKERFILE,
        entrypoint='/manager',
        only=['./tilt_bin/manager'],
        live_update=[
              sync('./tilt_bin/manager', '/manager'),
        ]
    )



